{"ast":null,"code":"var _jsxFileName = \"/Users/yusei/Desktop/dev/reactProject/notion-clone/client/src/pages/Memo.jsx\",\n  _s = $RefreshSig$();\nimport { Box, IconButton, TextField, alpha } from '@mui/material';\nimport React, { useEffect, useState } from 'react';\nimport StarBorderOutlinedIcon from \"@mui/icons-material/StarBorderOutlined\";\nimport DeleteOutlinedIcon from \"@mui/icons-material/DeleteOutlined\";\nimport { useParams } from 'react-router-dom';\nimport memoApi from '../api/memoApi';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setMemo } from '../redux/features/memoSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Memo() {\n  _s();\n  const {\n    memoId\n  } = useParams();\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const dispatch = useDispatch();\n  const memos = useSelector(state => state.memo.value);\n  useEffect(() => {\n    const getMemo = async () => {\n      try {\n        const res = await memoApi.getOne(memoId);\n        setTitle(res.title);\n        setDescription(res.description);\n      } catch (err) {\n        alert(err);\n      }\n    };\n    getMemo();\n  }, [memoId]);\n  let timer;\n  const timeout = 500;\n  const updateTitle = async e => {\n    clearTimeout(timer);\n    const newTitle = e.target.value;\n    setTitle(newTitle);\n    timer = setTimeout(async () => {\n      try {\n        await memoApi.update(memoId, {\n          title: newTitle\n        });\n      } catch (err) {\n        alert(err);\n      }\n    }, timeout);\n  };\n  const updateDescription = async e => {\n    clearTimeout(timer);\n    const newDescription = e.target.value;\n    setDescription(newDescription);\n    timer = setTimeout(async () => {\n      try {\n        await memoApi.update(memoId, {\n          description: newDescription\n        });\n      } catch (err) {\n        alert(err);\n      }\n    }, timeout);\n  };\n  const deleteMemo = async () => {\n    try {\n      const deletedMemo = await memoApi.delete(memoId);\n      const mewMemos = memos.filter(e => e._id !== deletedMemo._id);\n      dispatch(setMemo(mewMemos));\n    } catch (err) {}\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: \"flex\",\n        alignItems: \"center\",\n        width: \"100%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(IconButton, {\n        children: /*#__PURE__*/_jsxDEV(StarBorderOutlinedIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        variant: \"outlined\",\n        color: \"error\",\n        onClick: deleteMemo,\n        children: /*#__PURE__*/_jsxDEV(DeleteOutlinedIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          padding: \"10px 50px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          onChange: updateTitle,\n          value: title,\n          placeholder: \"\\u7121\\u984C\",\n          variant: \"outlined\",\n          fullWidth: true,\n          sx: {\n            \".MuiOutlinedInput-input\": {\n              padding: 0\n            },\n            \".MuiOutlinedInput-notchedOutline\": {\n              border: \"none\"\n            },\n            \".MuiOutlinedInput-input\": {\n              fontSize: \"2.0rem\",\n              fontWeight: \"700\"\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          onChange: updateDescription,\n          value: description,\n          placeholder: \"\\u8FFD\\u52A0\",\n          variant: \"outlined\",\n          fullWidth: true,\n          sx: {\n            \".MuiOutlinedInput-input\": {\n              padding: 0\n            },\n            \".MuiOutlinedInput-notchedOutline\": {\n              border: \"none\"\n            },\n            \".MuiOutlinedInput-input\": {\n              fontSize: \"1.0rem\"\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(Memo, \"mCXTRnuBez9fMmbGsV7zQn3T6Ns=\", false, function () {\n  return [useParams, useDispatch, useSelector];\n});\n_c = Memo;\nexport default Memo;\nvar _c;\n$RefreshReg$(_c, \"Memo\");","map":{"version":3,"names":["Box","IconButton","TextField","alpha","React","useEffect","useState","StarBorderOutlinedIcon","DeleteOutlinedIcon","useParams","memoApi","useDispatch","useSelector","setMemo","jsxDEV","_jsxDEV","Fragment","_Fragment","Memo","_s","memoId","title","setTitle","description","setDescription","dispatch","memos","state","memo","value","getMemo","res","getOne","err","alert","timer","timeout","updateTitle","e","clearTimeout","newTitle","target","setTimeout","update","updateDescription","newDescription","deleteMemo","deletedMemo","delete","mewMemos","filter","_id","children","sx","display","alignItems","width","fileName","_jsxFileName","lineNumber","columnNumber","variant","color","onClick","padding","onChange","placeholder","fullWidth","border","fontSize","fontWeight","_c","$RefreshReg$"],"sources":["/Users/yusei/Desktop/dev/reactProject/notion-clone/client/src/pages/Memo.jsx"],"sourcesContent":["import { Box, IconButton, TextField, alpha } from '@mui/material'\nimport React, { useEffect, useState } from 'react'\nimport StarBorderOutlinedIcon from \"@mui/icons-material/StarBorderOutlined\"\nimport DeleteOutlinedIcon from \"@mui/icons-material/DeleteOutlined\"\nimport { useParams } from 'react-router-dom';\nimport memoApi from '../api/memoApi';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setMemo } from '../redux/features/memoSlice';\n\nfunction Memo() {\n\n    const { memoId } = useParams();\n    const [title, setTitle] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const dispatch = useDispatch();\n    const memos = useSelector((state) => state.memo.value);\n\n    useEffect(() => {\n        const getMemo = async () => {\n            try {\n                const res = await memoApi.getOne(memoId);\n                setTitle(res.title);\n                setDescription(res.description)\n            } catch (err) {\n                alert(err);\n            }\n        }\n        getMemo();\n    }, [memoId])\n\n    let timer;\n    const timeout = 500;\n\n    const updateTitle = async (e) => {\n        clearTimeout(timer);\n        const newTitle = e.target.value;\n        setTitle(newTitle);\n\n        timer = setTimeout(async () => {\n            try {\n                await memoApi.update(memoId, { title: newTitle })\n            } catch (err) {\n                alert(err);\n            }\n        }, timeout)\n    }\n\n    const updateDescription = async (e) => {\n        clearTimeout(timer);\n        const newDescription = e.target.value;\n        setDescription(newDescription);\n\n        timer = setTimeout(async () => {\n            try {\n                await memoApi.update(memoId, { description: newDescription })\n            } catch (err) {\n                alert(err);\n            }\n        }, timeout)\n    }\n\n    const deleteMemo = async () => {\n        try {\n            const deletedMemo = await memoApi.delete(memoId);\n\n            const mewMemos = memos.filter((e) => e._id !== deletedMemo._id);\n            dispatch(setMemo(mewMemos));\n        } catch (err) {\n\n        }\n    }\n\n    return (\n        <>\n            <Box sx={{\n                display: \"flex\",\n                alignItems: \"center\",\n                width: \"100%\",\n            }}>\n                <IconButton>\n                    <StarBorderOutlinedIcon />\n                </IconButton>\n                <IconButton variant=\"outlined\" color='error' onClick={deleteMemo}>\n                    <DeleteOutlinedIcon />\n                </IconButton>\n                <Box sx={{ padding: \"10px 50px\" }}>\n                    <TextField\n                        onChange={updateTitle}\n                        value={title}\n                        placeholder='無題' variant='outlined' fullWidth\n                        sx={{\n                            \".MuiOutlinedInput-input\": { padding: 0 },\n                            \".MuiOutlinedInput-notchedOutline\": { border: \"none\" },\n                            \".MuiOutlinedInput-input\": { fontSize: \"2.0rem\", fontWeight: \"700\" }\n                        }}\n                    />\n                    <TextField\n                        onChange={updateDescription}\n                        value={description}\n                        placeholder='追加' variant='outlined' fullWidth\n                        sx={{\n                            \".MuiOutlinedInput-input\": { padding: 0 },\n                            \".MuiOutlinedInput-notchedOutline\": { border: \"none\" },\n                            \".MuiOutlinedInput-input\": { fontSize: \"1.0rem\", }\n                        }}\n                    />\n                </Box>\n            </Box>\n        </>\n    )\n}\n\nexport default Memo"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}