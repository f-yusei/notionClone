{"ast":null,"code":"var _jsxFileName = \"/Users/yusei/Desktop/dev/reactProject/notion-clone/client/src/components/common/EmojiPicker.jsx\",\n  _s = $RefreshSig$();\nimport { Box, Typography } from '@mui/material';\nimport React, { useEffect } from 'react';\nimport { useState } from 'react';\nimport { Picker } from 'emoji-mart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmojiPicker = props => {\n  _s();\n  const [selectedEmoji, setSelectedEmoji] = useState();\n  useEffect(() => {\n    setSelectedEmoji(props.icon);\n  }, [props.icon]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h3\",\n      fontWeight: \"700\",\n      sx: {\n        cursor: \"pointer\"\n      },\n      children: selectedEmoji\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Picker, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n_s(EmojiPicker, \"kMOSCLvEtLvh4+zjIb6n4VH1SbQ=\");\n_c = EmojiPicker;\nexport default EmojiPicker;\nvar _c;\n$RefreshReg$(_c, \"EmojiPicker\");","map":{"version":3,"names":["Box","Typography","React","useEffect","useState","Picker","jsxDEV","_jsxDEV","EmojiPicker","props","_s","selectedEmoji","setSelectedEmoji","icon","children","variant","fontWeight","sx","cursor","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/yusei/Desktop/dev/reactProject/notion-clone/client/src/components/common/EmojiPicker.jsx"],"sourcesContent":["import { Box, Typography } from '@mui/material'\nimport React, { useEffect } from 'react'\nimport { useState } from 'react'\nimport { Picker } from 'emoji-mart'\n\nconst EmojiPicker = (props) => {\n    const [selectedEmoji, setSelectedEmoji] = useState();\n\n    useEffect(() => {\n        setSelectedEmoji(props.icon)\n    }, [props.icon])\n    return (\n        <Box>\n            <Typography variant='h3' fontWeight=\"700\" sx={{ cursor: \"pointer\" }}>\n                {selectedEmoji}\n            </Typography>\n            <Picker />\n        </Box>\n    )\n}\n\nexport default EmojiPicker"],"mappings":";;AAAA,SAASA,GAAG,EAAEC,UAAU,QAAQ,eAAe;AAC/C,OAAOC,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,MAAM,QAAQ,YAAY;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC3B,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,CAAC,CAAC;EAEpDD,SAAS,CAAC,MAAM;IACZS,gBAAgB,CAACH,KAAK,CAACI,IAAI,CAAC;EAChC,CAAC,EAAE,CAACJ,KAAK,CAACI,IAAI,CAAC,CAAC;EAChB,oBACIN,OAAA,CAACP,GAAG;IAAAc,QAAA,gBACAP,OAAA,CAACN,UAAU;MAACc,OAAO,EAAC,IAAI;MAACC,UAAU,EAAC,KAAK;MAACC,EAAE,EAAE;QAAEC,MAAM,EAAE;MAAU,CAAE;MAAAJ,QAAA,EAC/DH;IAAa;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eACbf,OAAA,CAACF,MAAM;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAEd,CAAC;AAAAZ,EAAA,CAdKF,WAAW;AAAAe,EAAA,GAAXf,WAAW;AAgBjB,eAAeA,WAAW;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}