{"ast":null,"code":"var _jsxFileName = \"/Users/yusei/Desktop/dev/reactProject/notion-clone/client/src/components/common/EmojiPicker.jsx\",\n  _s = $RefreshSig$();\nimport { Box, Typography } from '@mui/material';\nimport React, { useEffect } from 'react';\nimport { useState } from 'react';\nimport Picker from '@emoji-mart/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmojiPicker = props => {\n  _s();\n  const [selectedEmoji, setSelectedEmoji] = useState();\n  const [isShowPicker, setIsShowPicker] = useState(false);\n  const showPicker = () => {\n    setIsShowPicker(!isShowPicker);\n  };\n  const selectEmoji = emoji => {\n    const emojiCode = emoji.unified;\n    console.log(emojiCode);\n    let codesArray = [];\n    codesArray.push(\"0x\" + emojiCode);\n    console.log(codesArray);\n  };\n  useEffect(() => {\n    setSelectedEmoji(props.icon);\n  }, [props.icon]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h3\",\n      fontWeight: \"700\",\n      sx: {\n        cursor: \"pointer\"\n      },\n      onClick: showPicker,\n      children: selectedEmoji\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: isShowPicker ? \"block\" : \"none\",\n        position: \"absolute\",\n        zIndex: \"100\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Picker, {\n        onEmojiSelect: selectEmoji\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n_s(EmojiPicker, \"6GWULE1yKxButfRwFxrGFu/x8rs=\");\n_c = EmojiPicker;\nexport default EmojiPicker;\nvar _c;\n$RefreshReg$(_c, \"EmojiPicker\");","map":{"version":3,"names":["Box","Typography","React","useEffect","useState","Picker","jsxDEV","_jsxDEV","EmojiPicker","props","_s","selectedEmoji","setSelectedEmoji","isShowPicker","setIsShowPicker","showPicker","selectEmoji","emoji","emojiCode","unified","console","log","codesArray","push","icon","children","variant","fontWeight","sx","cursor","onClick","fileName","_jsxFileName","lineNumber","columnNumber","display","position","zIndex","onEmojiSelect","_c","$RefreshReg$"],"sources":["/Users/yusei/Desktop/dev/reactProject/notion-clone/client/src/components/common/EmojiPicker.jsx"],"sourcesContent":["import { Box, Typography } from '@mui/material'\nimport React, { useEffect } from 'react'\nimport { useState } from 'react'\nimport Picker from '@emoji-mart/react'\n\nconst EmojiPicker = (props) => {\n    const [selectedEmoji, setSelectedEmoji] = useState();\n    const [isShowPicker, setIsShowPicker] = useState(false);\n\n    const showPicker = () => { setIsShowPicker(!isShowPicker) }\n\n    const selectEmoji = (emoji) => {\n        const emojiCode = emoji.unified;\n        console.log(emojiCode)\n        let codesArray = [];\n        codesArray.push(\"0x\" + emojiCode);\n        console.log(codesArray)\n    }\n\n    useEffect(() => {\n        setSelectedEmoji(props.icon)\n    }, [props.icon])\n    return (\n        <Box>\n            <Typography\n                variant='h3'\n                fontWeight=\"700\"\n                sx={{ cursor: \"pointer\" }}\n                onClick={showPicker} >\n                {selectedEmoji}\n            </Typography>\n            <Box sx={{ display: isShowPicker ? \"block\" : \"none\", position: \"absolute\", zIndex: \"100\" }}>\n                <Picker onEmojiSelect={selectEmoji} />\n            </Box>\n        </Box>\n    )\n}\n\nexport default EmojiPicker"],"mappings":";;AAAA,SAASA,GAAG,EAAEC,UAAU,QAAQ,eAAe;AAC/C,OAAOC,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,MAAM,MAAM,mBAAmB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC3B,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,CAAC,CAAC;EACpD,MAAM,CAACS,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAEvD,MAAMW,UAAU,GAAGA,CAAA,KAAM;IAAED,eAAe,CAAC,CAACD,YAAY,CAAC;EAAC,CAAC;EAE3D,MAAMG,WAAW,GAAIC,KAAK,IAAK;IAC3B,MAAMC,SAAS,GAAGD,KAAK,CAACE,OAAO;IAC/BC,OAAO,CAACC,GAAG,CAACH,SAAS,CAAC;IACtB,IAAII,UAAU,GAAG,EAAE;IACnBA,UAAU,CAACC,IAAI,CAAC,IAAI,GAAGL,SAAS,CAAC;IACjCE,OAAO,CAACC,GAAG,CAACC,UAAU,CAAC;EAC3B,CAAC;EAEDnB,SAAS,CAAC,MAAM;IACZS,gBAAgB,CAACH,KAAK,CAACe,IAAI,CAAC;EAChC,CAAC,EAAE,CAACf,KAAK,CAACe,IAAI,CAAC,CAAC;EAChB,oBACIjB,OAAA,CAACP,GAAG;IAAAyB,QAAA,gBACAlB,OAAA,CAACN,UAAU;MACPyB,OAAO,EAAC,IAAI;MACZC,UAAU,EAAC,KAAK;MAChBC,EAAE,EAAE;QAAEC,MAAM,EAAE;MAAU,CAAE;MAC1BC,OAAO,EAAEf,UAAW;MAAAU,QAAA,EACnBd;IAAa;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eACb3B,OAAA,CAACP,GAAG;MAAC4B,EAAE,EAAE;QAAEO,OAAO,EAAEtB,YAAY,GAAG,OAAO,GAAG,MAAM;QAAEuB,QAAQ,EAAE,UAAU;QAAEC,MAAM,EAAE;MAAM,CAAE;MAAAZ,QAAA,eACvFlB,OAAA,CAACF,MAAM;QAACiC,aAAa,EAAEtB;MAAY;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAAxB,EAAA,CA/BKF,WAAW;AAAA+B,EAAA,GAAX/B,WAAW;AAiCjB,eAAeA,WAAW;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}