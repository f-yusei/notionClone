[{"/Users/yusei/Desktop/dev/reactProject/notion-clone/client/src/index.js":"1","/Users/yusei/Desktop/dev/reactProject/notion-clone/client/src/App.js":"2","/Users/yusei/Desktop/dev/reactProject/notion-clone/client/src/pages/Login.jsx":"3","/Users/yusei/Desktop/dev/reactProject/notion-clone/client/src/components/layout/AuthLayout.jsx":"4","/Users/yusei/Desktop/dev/reactProject/notion-clone/client/src/pages/Register.jsx":"5","/Users/yusei/Desktop/dev/reactProject/notion-clone/client/src/api/authApi.js":"6","/Users/yusei/Desktop/dev/reactProject/notion-clone/client/src/api/axiosClient.js":"7","/Users/yusei/Desktop/dev/reactProject/notion-clone/client/src/utils/authUtils.js":"8","/Users/yusei/Desktop/dev/reactProject/notion-clone/client/src/components/layout/AppLayout.jsx":"9","/Users/yusei/Desktop/dev/reactProject/notion-clone/client/src/pages/Home.jsx":"10","/Users/yusei/Desktop/dev/reactProject/notion-clone/client/src/components/common/Sidebar.jsx":"11","/Users/yusei/Desktop/dev/reactProject/notion-clone/client/src/assets/index.js":"12","/Users/yusei/Desktop/dev/reactProject/notion-clone/client/src/redux/store.js":"13","/Users/yusei/Desktop/dev/reactProject/notion-clone/client/src/redux/features/userSlice.js":"14","/Users/yusei/Desktop/dev/reactProject/notion-clone/client/src/api/memoApi.js":"15","/Users/yusei/Desktop/dev/reactProject/notion-clone/client/src/pages/Memo.jsx":"16","/Users/yusei/Desktop/dev/reactProject/notion-clone/client/src/redux/features/memoSlice.js":"17","/Users/yusei/Desktop/dev/reactProject/notion-clone/client/src/components/common/EmojiPicker.jsx":"18"},{"size":344,"mtime":1687640923592,"results":"19","hashOfConfig":"20"},{"size":1192,"mtime":1687649159233,"results":"21","hashOfConfig":"20"},{"size":2859,"mtime":1687523188442,"results":"22","hashOfConfig":"20"},{"size":1079,"mtime":1687473201476,"results":"23","hashOfConfig":"20"},{"size":3784,"mtime":1687469667564,"results":"24","hashOfConfig":"20"},{"size":281,"mtime":1687479247435,"results":"25","hashOfConfig":"20"},{"size":637,"mtime":1687470144971,"results":"26","hashOfConfig":"20"},{"size":388,"mtime":1687472945364,"results":"27","hashOfConfig":"20"},{"size":1017,"mtime":1687642192012,"results":"28","hashOfConfig":"20"},{"size":936,"mtime":1687647496575,"results":"29","hashOfConfig":"20"},{"size":4700,"mtime":1688129963635,"results":"30","hashOfConfig":"20"},{"size":92,"mtime":1687522159183,"results":"31","hashOfConfig":"20"},{"size":261,"mtime":1687680857500,"results":"32","hashOfConfig":"20"},{"size":357,"mtime":1687556858389,"results":"33","hashOfConfig":"20"},{"size":346,"mtime":1688115033306,"results":"34","hashOfConfig":"20"},{"size":4651,"mtime":1688200251047,"results":"35","hashOfConfig":"20"},{"size":413,"mtime":1687680912715,"results":"36","hashOfConfig":"20"},{"size":1244,"mtime":1688170984879,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"11o4zgm",{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/yusei/Desktop/dev/reactProject/notion-clone/client/src/index.js",[],[],"/Users/yusei/Desktop/dev/reactProject/notion-clone/client/src/App.js",[],[],"/Users/yusei/Desktop/dev/reactProject/notion-clone/client/src/pages/Login.jsx",[],[],"/Users/yusei/Desktop/dev/reactProject/notion-clone/client/src/components/layout/AuthLayout.jsx",[],[],"/Users/yusei/Desktop/dev/reactProject/notion-clone/client/src/pages/Register.jsx",[],[],"/Users/yusei/Desktop/dev/reactProject/notion-clone/client/src/api/authApi.js",[],[],"/Users/yusei/Desktop/dev/reactProject/notion-clone/client/src/api/axiosClient.js",[],[],"/Users/yusei/Desktop/dev/reactProject/notion-clone/client/src/utils/authUtils.js",[],[],"/Users/yusei/Desktop/dev/reactProject/notion-clone/client/src/components/layout/AppLayout.jsx",["94","95","96"],[],"import { Container } from \"@mui/material\";\nimport Box from \"@mui/material/Box\";\nimport React, { useEffect } from \"react\";\nimport { Outlet, useNavigate } from \"react-router-dom\";\nimport notionLogo from \"../../assets/images/notion-logo.png\";\nimport authUtils from \"../../utils/authUtils\";\nimport Sidebar from \"../common/Sidebar\";\nimport { useDispatch } from \"react-redux\";\nimport { setUser } from \"../../redux/features/userSlice\"\n\nconst AppLayout = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const checkAuth = async () => {\n      const user = await authUtils.isAuthenticated();\n      if (!user) {\n        //navigate(\"/login\");\n      } else {\n        dispatch(setUser(user));\n      }\n    };\n    checkAuth();\n  }, [navigate]);\n  return (\n    <div>\n      <Box sx={{ display: \"flex\" }}>\n        <Sidebar />\n        <Box sx={{ flexGrow: 1, p: 1, width: \"max-content\" }}>\n          <Outlet />\n        </Box>\n      </Box>\n    </div>\n  );\n};\n\nexport default AppLayout;\n","/Users/yusei/Desktop/dev/reactProject/notion-clone/client/src/pages/Home.jsx",[],[],"/Users/yusei/Desktop/dev/reactProject/notion-clone/client/src/components/common/Sidebar.jsx",["97"],[],"import React, { useEffect, useState } from \"react\";\nimport {\n    Box,\n    Drawer,\n    IconButton,\n    List,\n    ListItemButton,\n    Typography,\n} from \"@mui/material\";\nimport AddBoxOutlinedIcon from \"@mui/icons-material/AddBoxOutlined\";\nimport LogoutOutlinedIcon from \"@mui/icons-material/LogoutOutlined\";\nimport assets from \"../../assets/index\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport memoApi from \"../../api/memoApi\";\nimport { setMemo } from \"../../redux/features/memoSlice\";\n\nfunction Sidebar() {\n\n    const [activeIndex, setActiveIndex] = useState(0);\n\n    const dispatch = useDispatch();\n\n    const navigate = useNavigate();\n    const user = useSelector((state) => state.user.value);\n    const memos = useSelector((state) => state.memo.value);\n    const { memoId } = useParams();\n\n    const logout = () => {\n        localStorage.removeItem(\"token\");\n        navigate(\"/login\");\n    };\n\n    useEffect(() => {\n        const getMemos = async () => {\n            try {\n                const res = await memoApi.getAll();\n                dispatch(setMemo(res));\n            } catch (err) {\n                alert(err)\n            }\n        }\n        getMemos();\n    }, [dispatch]);\n\n    useEffect(() => {\n        const activeIndex = memos.findIndex((e) => e._id === memoId);\n        setActiveIndex(activeIndex);\n    }, [navigate])\n\n    const addMemo = async () => {\n        try {\n            const res = await memoApi.create();\n            const newMemos = [res, ...memos];\n            dispatch(setMemo(newMemos));\n            navigate(`/memo/${res._id}`);\n        } catch (err) {\n            alert(err);\n        }\n    }\n\n    return (\n        <Drawer\n            container={window.document.body}\n            variant=\"permanent\"\n            open={true}\n            sx={{ width: 250, height: \"100vh\" }}\n        >\n            <List sx={{ width: 250, height: \"100vh\", backgroundColor: assets.colors.secondary }}>\n                <ListItemButton>\n                    <Box\n                        sx={{\n                            width: \"100%\",\n                            display: \"flex\",\n                            alignItems: \"center\",\n                            justifyContent: \"space-between\",\n                        }}\n                    >\n                        <Typography variant=\"body2\" fontWeight=\"700\">\n                            {user.username}\n                        </Typography>\n                        <IconButton onClick={logout}>\n                            <LogoutOutlinedIcon />\n                        </IconButton>\n                    </Box>\n                </ListItemButton>\n                <Box sx={{ paddingTop: \"10px\" }}></Box>\n                <ListItemButton>\n                    <Box\n                        sx={{\n                            width: \"100%\",\n                            display: \"flex\",\n                            alignItems: \"center\",\n                            justifyContent: \"space-between\",\n                        }}\n                    >\n                        <Typography variant=\"body2\" fontWeight=\"700\">\n                            お気に入り\n                        </Typography>\n                    </Box>\n                </ListItemButton>\n                <Box sx={{ paddingTop: \"10px\" }}></Box>\n                <ListItemButton>\n                    <Box\n                        sx={{\n                            width: \"100%\",\n                            display: \"flex\",\n                            alignItems: \"center\",\n                            justifyContent: \"space-between\",\n                        }}\n                    >\n                        <Typography variant=\"body2\" fontWeight=\"700\">\n                            プライベート\n                        </Typography>\n                        <IconButton onClick={() => addMemo()}>\n                            <AddBoxOutlinedIcon fontSize=\"small\" />\n                        </IconButton>\n                    </Box>\n                </ListItemButton>\n                {memos.map((item, index) => (\n                    <ListItemButton\n                        sx={{ pl: \"20px\" }}\n                        component={Link}\n                        to={`/memo/${item._id}`}\n                        key={item._id}\n                        selected={index === activeIndex}\n                    >\n                        <Typography>\n                            {item.icon} {item.title}\n                        </Typography>\n                    </ListItemButton>\n                ))}\n\n            </List>\n        </Drawer >\n    );\n}\n\nexport default Sidebar;\n","/Users/yusei/Desktop/dev/reactProject/notion-clone/client/src/assets/index.js",[],[],"/Users/yusei/Desktop/dev/reactProject/notion-clone/client/src/redux/store.js",[],[],"/Users/yusei/Desktop/dev/reactProject/notion-clone/client/src/redux/features/userSlice.js",[],[],"/Users/yusei/Desktop/dev/reactProject/notion-clone/client/src/api/memoApi.js",[],[],"/Users/yusei/Desktop/dev/reactProject/notion-clone/client/src/pages/Memo.jsx",["98","99","100"],[],"/Users/yusei/Desktop/dev/reactProject/notion-clone/client/src/redux/features/memoSlice.js",[],[],"/Users/yusei/Desktop/dev/reactProject/notion-clone/client/src/components/common/EmojiPicker.jsx",[],[],{"ruleId":"101","severity":1,"message":"102","line":1,"column":10,"nodeType":"103","messageId":"104","endLine":1,"endColumn":19},{"ruleId":"101","severity":1,"message":"105","line":5,"column":8,"nodeType":"103","messageId":"104","endLine":5,"endColumn":18},{"ruleId":"106","severity":1,"message":"107","line":25,"column":6,"nodeType":"108","endLine":25,"endColumn":16,"suggestions":"109"},{"ruleId":"106","severity":1,"message":"110","line":50,"column":8,"nodeType":"108","endLine":50,"endColumn":18,"suggestions":"111"},{"ruleId":"101","severity":1,"message":"112","line":1,"column":38,"nodeType":"103","messageId":"104","endLine":1,"endColumn":43},{"ruleId":"113","severity":1,"message":"114","line":118,"column":29,"nodeType":"115","messageId":"116","endLine":118,"endColumn":54},{"ruleId":"113","severity":1,"message":"114","line":131,"column":29,"nodeType":"115","messageId":"116","endLine":131,"endColumn":54},"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","'notionLogo' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["117"],"React Hook useEffect has missing dependencies: 'memoId' and 'memos'. Either include them or remove the dependency array.",["118"],"'alpha' is defined but never used.","no-dupe-keys","Duplicate key '.MuiOutlinedInput-input'.","ObjectExpression","unexpected",{"desc":"119","fix":"120"},{"desc":"121","fix":"122"},"Update the dependencies array to be: [dispatch, navigate]",{"range":"123","text":"124"},"Update the dependencies array to be: [memoId, memos, navigate]",{"range":"125","text":"126"},[768,778],"[dispatch, navigate]",[1442,1452],"[memoId, memos, navigate]"]